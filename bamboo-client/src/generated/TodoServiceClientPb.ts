/**
 * @fileoverview gRPC-Web generated client stub for todo
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: todo.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as todo_pb from './todo_pb';


export class TodoClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/todo.Todo/GetAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    todo_pb.GetTodosReply,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    todo_pb.GetTodosReply.deserializeBinary
  );

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<todo_pb.GetTodosReply>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosReply) => void): grpcWeb.ClientReadableStream<todo_pb.GetTodosReply>;

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/GetAll',
        request,
        metadata || {},
        this.methodDescriptorGetAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/GetAll',
    request,
    metadata || {},
    this.methodDescriptorGetAll);
  }

  methodDescriptorGetByUserId = new grpcWeb.MethodDescriptor(
    '/todo.Todo/GetByUserId',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    todo_pb.GetTodosReply,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    todo_pb.GetTodosReply.deserializeBinary
  );

  getByUserId(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<todo_pb.GetTodosReply>;

  getByUserId(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosReply) => void): grpcWeb.ClientReadableStream<todo_pb.GetTodosReply>;

  getByUserId(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodosReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/GetByUserId',
        request,
        metadata || {},
        this.methodDescriptorGetByUserId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/GetByUserId',
    request,
    metadata || {},
    this.methodDescriptorGetByUserId);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/todo.Todo/Get',
    grpcWeb.MethodType.UNARY,
    todo_pb.GetTodoRequest,
    todo_pb.GetTodoReply,
    (request: todo_pb.GetTodoRequest) => {
      return request.serializeBinary();
    },
    todo_pb.GetTodoReply.deserializeBinary
  );

  get(
    request: todo_pb.GetTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<todo_pb.GetTodoReply>;

  get(
    request: todo_pb.GetTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodoReply) => void): grpcWeb.ClientReadableStream<todo_pb.GetTodoReply>;

  get(
    request: todo_pb.GetTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: todo_pb.GetTodoReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorPut = new grpcWeb.MethodDescriptor(
    '/todo.Todo/Put',
    grpcWeb.MethodType.UNARY,
    todo_pb.PutTodoRequest,
    google_protobuf_empty_pb.Empty,
    (request: todo_pb.PutTodoRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  put(
    request: todo_pb.PutTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  put(
    request: todo_pb.PutTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  put(
    request: todo_pb.PutTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/Put',
        request,
        metadata || {},
        this.methodDescriptorPut,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/Put',
    request,
    metadata || {},
    this.methodDescriptorPut);
  }

  methodDescriptorPost = new grpcWeb.MethodDescriptor(
    '/todo.Todo/Post',
    grpcWeb.MethodType.UNARY,
    todo_pb.PostTodoRequest,
    google_protobuf_empty_pb.Empty,
    (request: todo_pb.PostTodoRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  post(
    request: todo_pb.PostTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  post(
    request: todo_pb.PostTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  post(
    request: todo_pb.PostTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/Post',
        request,
        metadata || {},
        this.methodDescriptorPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/Post',
    request,
    metadata || {},
    this.methodDescriptorPost);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/todo.Todo/Delete',
    grpcWeb.MethodType.UNARY,
    todo_pb.DeleteTodoRequest,
    google_protobuf_empty_pb.Empty,
    (request: todo_pb.DeleteTodoRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: todo_pb.DeleteTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: todo_pb.DeleteTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: todo_pb.DeleteTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/todo.Todo/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/todo.Todo/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

}

